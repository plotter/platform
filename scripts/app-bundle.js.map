{"version":3,"sources":["platform/pak/view.ts","platform/pak/pak.ts","C:/a/p/platform/src/platform/pak/pak-repository.js","platform/pak/pak-repository-file.ts","platform/pak/pak-directory.ts","platform/state/view-instance.ts","platform/state/active-pak.ts","platform/state/state-session.ts","C:/a/p/platform/src/platform/state/state-repository.js","C:/a/p/platform/src/platform/state/state-repository-local-storage.js","platform/state/state-repository-file.ts","platform/state/state-directory.ts","src/platform/plotter.ts","src/platform/platform-startup.ts","app.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/shell/shell.ts","src/state/state-repository-chooser.ts","state/state-session-chooser.ts","C:/a/p/platform/src/platform/pak/pak-provider-service.js","src/platform/state/state-repository-github-gist.ts","src/platform/state/state-repository-service.ts","test/unit/app.spec.ts","test/unit/setup.ts","test/unit/platform/platform-startup.spec.ts","state/new-session.ts","C:/a/p/platform/src/app.html","C:/a/p/platform/src/shell/shell.html","app.less","C:/a/p/platform/src/state/state-repository-chooser.html","shell/shell.less","C:/a/p/platform/src/state/state-session-chooser.html","shell/state-repository-chooser.less","state/state-repository-chooser.less","state/state-session-chooser.less","C:/a/p/platform/src/state/new-session.html","state/new-session.less"],"names":[],"mappings":";;IAEA;QAAA;QAeA,CAAC;QAdiB,aAAQ,GAAtB,UAAuB,IAAc;YACjC,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAOL,WAAC;IAAD,CAfA,AAeC,IAAA;IAfY,YAAI,OAehB,CAAA;;;;;ICdD;QAAA;QAkBA,CAAC;QAjBiB,YAAQ,GAAtB,UAAuB,IAAa;YAChC,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;YAEpB,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC7B,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,QAAQ;gBAC/B,IAAI,IAAI,GAAG,WAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACnC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;gBACf,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAML,UAAC;IAAD,CAlBA,AAkBC,IAAA;IAlBY,WAAG,MAkBf,CAAA;;;ACrBD;AACA;AACA;AACA;;;ICEA;QAQI,2BAAoB,UAAsB;YAR9C,iBA4CC;YApCuB,eAAU,GAAV,UAAU,CAAY;YAPnC,WAAM,GAAG,KAAK,CAAC;YACf,aAAQ,GAAG,gBAAgB,CAAC;YAC5B,sBAAiB,GAAsB,MAAM,CAAC;YAO9C,WAAM,GAAG,UAAC,KAAK;gBAClB,IAAI,IAAI,GAAG,KAAI,CAAC;gBAChB,MAAM,CAAC,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;oBACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAI,IAAI,CAAC,IAAI,SAAI,IAAI,CAAC,QAAQ,SAAI,KAAK,UAAO,CAAC;yBAC/D,IAAI,CAAC,UAAA,QAAQ;wBACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBAC3B,CAAC,CAAC;yBACD,IAAI,CAAC,UAAA,IAAI;wBACN,IAAI,GAAG,GAAG,SAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBAC7B,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC;wBACzB,OAAO,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,MAAM;wBACT,MAAM,CAAC,IAAI,KAAK,CAAC,yCAAuC,MAAQ,CAAC,CAAC,CAAC;oBACvE,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAA;YACM,eAAU,GAAG;gBAChB,IAAI,IAAI,GAAG,KAAI,CAAC;gBAEhB,MAAM,CAAC,IAAI,OAAO,CAAW,UAAC,OAAO,EAAE,MAAM;oBACzC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAI,IAAI,CAAC,IAAI,SAAI,IAAI,CAAC,QAAQ,mBAAgB,CAAC;yBAC/D,IAAI,CAAC,UAAA,QAAQ;wBACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBAC3B,CAAC,CAAC;yBACD,IAAI,CAAC,UAAA,IAAI;wBACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC5B,OAAO,CAAY,IAAI,CAAC,OAAO,CAAC,CAAC;oBACrC,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,MAAM;wBACT,MAAM,CAAC,IAAI,KAAK,CAAC,4CAA0C,MAAQ,CAAC,CAAC,CAAC;oBAC1E,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAA;QAnC4C,CAAC;QAoClD,wBAAC;IAAD,CA5CA,AA4CC,IAAA;IA5CY,yBAAiB,oBA4C7B,CAAA;;;;;IC5CD;QAAA;QAkCA,CAAC;QAjCiB,qBAAQ,GAAtB,UAAuB,IAAsB;YACzC,IAAI,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;YAEtC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAClC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACtC,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAA,iBAAiB;gBACrE,MAAM,CAAC,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBAC1C,KAAK,MAAM;wBACP,CAAC;4BACG,IAAI,aAAa,GAAG,IAAI,uCAAiB,CAAC,IAAI,iCAAU,EAAE,CAAC,CAAC;4BAC5D,aAAa,CAAC,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;4BAChD,aAAa,CAAC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;4BACpD,aAAa,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,iBAAiB,CAAC;4BACtE,aAAa,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC;4BAC5C,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;4BAC1C,MAAM,CAAC,aAAa,CAAC;wBACzB,CAAC;oBAEL;wBACI,MAAM,IAAI,KAAK,CAAC,gBAAc,iBAAiB,CAAC,iBAAiB,oBAAiB,CAAC,CAAC;gBAC5F,CAAC;YACL,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,YAAY,CAAC;QACxB,CAAC;QAOM,6BAAM,GAAb;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5C,CAAC;QACL,mBAAC;IAAD,CAlCA,AAkCC,IAAA;IAlCY,oBAAY,eAkCxB,CAAA;;;;;ICrCD;QAAA;QASA,CAAC;QARiB,qBAAQ,GAAtB,UAAuB,IAAsB;YACzC,IAAI,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;YACtC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACxC,MAAM,CAAC,YAAY,CAAC;QACxB,CAAC;QAIL,mBAAC;IAAD,CATA,AASC,IAAA;IATY,oBAAY,eASxB,CAAA;;;;;ICRD;QAAA;QAkBA,CAAC;QAjBiB,kBAAQ,GAAtB,UAAuB,IAAmB;YACtC,IAAI,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;YAChC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC/B,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACnC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAA,gBAAgB;gBAC7D,IAAI,YAAY,GAAG,4BAAY,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;gBAC3D,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;gBACnC,MAAM,CAAC,YAAY,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAML,gBAAC;IAAD,CAlBA,AAkBC,IAAA;IAlBY,iBAAS,YAkBrB,CAAA;;;;;IClBD;QAAA;YAiBW,eAAU,GAAgB,EAAE,CAAC;QAExC,CAAC;QAjBiB,qBAAQ,GAAtB,UAAuB,IAAsB;YACzC,IAAI,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;YAEtC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAClC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACtC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,aAAa;gBACvD,IAAI,SAAS,GAAG,sBAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBAClD,SAAS,CAAC,YAAY,GAAG,YAAY,CAAC;gBACtC,MAAM,CAAC,SAAS,CAAC;YACrB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,YAAY,CAAC;QACxB,CAAC;QAML,mBAAC;IAAD,CAnBA,AAmBC,IAAA;IAnBY,oBAAY,eAmBxB,CAAA;;;ACtBD;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;;;;;;;;;;;;ICKA;QAiBI,6BAAoB,UAAsB;YAjB9C,iBA6EC;YA5DuB,eAAU,GAAV,UAAU,CAAY;YANnC,WAAM,GAAG,KAAK,CAAC;YACf,aAAQ,GAAG,kBAAkB,CAAC;YAC9B,wBAAmB,GAAwB,MAAM,CAAC;YAMlD,oBAAe,GAAG;gBACrB,IAAI,IAAI,GAAG,KAAI,CAAC;gBAChB,MAAM,CAAC,IAAI,OAAO,CAAe,UAAC,OAAO,EAAE,MAAM;oBAC7C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAI,IAAI,CAAC,IAAI,SAAI,IAAI,CAAC,QAAQ,wBAAqB,CAAC;yBACpE,IAAI,CAAC,UAAA,QAAQ;wBACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBAC3B,CAAC,CAAC;yBACD,IAAI,CAAC,UAAA,IAAI;wBACN,IAAI,YAAY,GAAG,4BAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBAC/C,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC;wBACpC,OAAO,CAAC,YAAY,CAAC,CAAC;oBAC1B,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,MAAM;wBACT,MAAM,CAAC,IAAI,KAAK,CAAC,iDAA+C,MAAQ,CAAC,CAAC,CAAC;oBAC/E,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAA;QAlB4C,CAAC;QAhBhC,4BAAQ,GAAtB,UAAuB,IAAyB;YAC5C,IAAI,eAAe,GAAG,IAAI,mBAAmB,CAAC,IAAI,iCAAU,EAAE,CAAC,CAAC;YAEhE,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACrC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACzC,eAAe,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAC/D,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACjC,MAAM,CAAC,eAAe,CAAC;QAC3B,CAAC;QA2BM,6CAAe,GAAtB,UAAuB,SAAS;YAC5B,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,MAAM,CAAC,IAAI,OAAO,CAAe,UAAC,OAAO,EAAE,MAAM;gBAC7C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAI,IAAI,CAAC,IAAI,SAAI,IAAI,CAAC,QAAQ,SAAI,SAAS,UAAO,CAAC;qBACnE,IAAI,CAAC,UAAA,QAAQ;oBACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAC3B,CAAC,CAAC;qBACD,IAAI,CAAC,UAAA,IAAI;oBACN,IAAI,YAAY,GAAG,4BAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAC/C,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC;oBACpC,OAAO,CAAC,YAAY,CAAC,CAAC;gBAC1B,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,MAAM;oBACT,MAAM,CAAC,IAAI,KAAK,CAAC,yCAAuC,MAAQ,CAAC,CAAC,CAAC;gBACvE,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC;QACM,4CAAc,GAArB;YACI,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,MAAM,CAAC,IAAI,OAAO,CAAW,UAAC,OAAO,EAAE,MAAM;gBACzC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAI,IAAI,CAAC,IAAI,SAAI,IAAI,CAAC,QAAQ,uBAAoB,CAAC;qBACnE,IAAI,CAAC,UAAA,QAAQ;oBACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAC3B,CAAC,CAAC;qBACD,IAAI,CAAC,UAAA,IAAI;oBACN,OAAO,CAAY,IAAI,CAAC,WAAW,CAAC,CAAC;gBACzC,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,MAAM;oBACT,MAAM,CAAC,IAAI,KAAK,CAAC,yCAAuC,MAAQ,CAAC,CAAC,CAAC;gBACvE,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC;QACM,oCAAM,GAAb;YACI,MAAM,CAAC;gBACH,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;gBAC7C,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,IAAI,EAAE,IAAI,CAAC,IAAI;aAClB,CAAC;QACN,CAAC;QA7EL;YAAC,0BAAM,CAAC,iCAAU,CAAC;;+BAAA;QA8EnB,0BAAC;IAAD,CA7EA,AA6EC,IAAA;IA7EY,2BAAmB,sBA6E/B,CAAA;;;;;ICjFD;QAAA;QAgEA,CAAC;QA/DiB,uBAAQ,GAAtB,UAAuB,IAAwB;YAC3C,IAAI,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;YAE1C,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACpC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACxC,cAAc,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAA,mBAAmB;gBAC7E,MAAM,CAAC,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,CAAC,CAAC;oBAC9C,KAAK,MAAM;wBACX,CAAC;4BACG,IAAI,eAAe,GAAG,IAAI,2CAAmB,CAAC,IAAI,iCAAU,EAAE,CAAC,CAAC;4BAChE,eAAe,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC;4BACpD,eAAe,CAAC,QAAQ,GAAG,mBAAmB,CAAC,QAAQ,CAAC;4BACxD,eAAe,CAAC,mBAAmB,GAAG,mBAAmB,CAAC,mBAAmB,CAAC;4BAC9E,eAAe,CAAC,IAAI,GAAG,mBAAmB,CAAC,IAAI,CAAC;4BAChD,eAAe,CAAC,cAAc,GAAG,cAAc,CAAC;4BAChD,MAAM,CAAC,eAAe,CAAC;wBAC3B,CAAC;oBAED;wBACI,MAAM,IAAI,KAAK,CAAC,gBAAc,mBAAmB,CAAC,mBAAmB,oBAAiB,CAAC,CAAC;gBAChG,CAAC;YACL,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,cAAc,CAAC;QAC1B,CAAC;QAMM,2CAAkB,GAAzB,UAA0B,QAAgB;YAGtC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC;YAED,IAAI,SAAS,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAA,IAAI;gBAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC7B,SAAS,GAAG,IAAI,CAAC;oBACjB,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAEM,wCAAe,GAAtB,UAAuB,iBAAyB,EAAE,cAAsB;YACpE,IAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;YACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,MAAM,IAAI,KAAK,CAAC,oCAAkC,iBAAmB,CAAC,CAAC;YAC3E,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QAChD,CAAC;QAEM,+BAAM,GAAb;YACI,MAAM,CAAC;gBACH,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAA,eAAe,IAAI,OAAA,eAAe,CAAC,MAAM,EAAE,EAAxB,CAAwB,CAAC;gBAC1F,QAAQ,EAAE,IAAI,CAAC,QAAQ;aAC1B,CAAC;QACN,CAAC;QACL,qBAAC;IAAD,CAhEA,AAgEC,IAAA;IAhEY,sBAAc,iBAgE1B,CAAA;;;;;IChED;QAAA;YACW,uBAAkB,GAAW,iBAAiB,CAAC;QAyB1D,CAAC;QAtBG,sBAAW,mCAAc;iBAAzB;gBACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACjC,CAAC;iBACD,UAA0B,KAAK;gBAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAClC,CAAC;;;WAHA;QAMD,sBAAW,oCAAe;iBAA1B;gBACI,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAClC,CAAC;iBACD,UAA2B,KAAK;gBAC5B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACnC,CAAC;;;WAHA;QAMD,sBAAW,iCAAY;iBAAvB;gBACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;YAC/B,CAAC;iBACD,UAAwB,KAAK;gBACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAChC,CAAC;;;WAHA;QAIL,cAAC;IAAD,CA1BA,AA0BC,IAAA;IA1BY,eAAO,UA0BnB,CAAA;;;;;;;;;;;;;;ICxBD;QAEI,yBAAoB,UAAsB,EAAU,OAAgB;YAAhD,eAAU,GAAV,UAAU,CAAY;YAAU,YAAO,GAAP,OAAO,CAAS;QAAI,CAAC;QAElE,+BAAK,GAAZ;YAAA,iBAsCC;YArCG,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,MAAM,CAAC,IAAI,OAAO,CAAiB,UAAC,OAAO,EAAE,MAAM;gBAE/C,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;gBAG1C,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3C,MAAM,CAAC,4BAA4B,CAAC,CAAC;gBACzC,CAAC;gBAAC,IAAI,CACF,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBAC9C,MAAM,CAAC,+BAA+B,CAAC,CAAC;gBAC5C,CAAC;gBAAC,IAAI,CACF,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBAChD,MAAM,CAAC,iCAAiC,CAAC,CAAC;gBAC9C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBAIJ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAI,GAAG,UAAO,CAAC;yBAC/B,IAAI,CAAC,UAAA,QAAQ;wBACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBAC3B,CAAC,CAAC;yBACD,IAAI,CAAC,UAAA,IAAI;wBACN,IAAI,cAAc,GAAG,gCAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACnD,KAAI,CAAC,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;wBAC7C,OAAO,CAAC,cAAc,CAAC,CAAC;oBAC5B,CAAC,CAAC;yBACD,KAAK,CAAC,UAAA,MAAM;wBACT,MAAM,CAAC,IAAI,KAAK,CAAC,8CAA4C,MAAQ,CAAC,CAAC,CAAC;oBAC5E,CAAC,CAAC,CAAC;gBAKX,CAAC;YACb,CAAC,CAAC,CAAC;QACP,CAAC;QA3CL;YAAC,0BAAM,CAAC,iCAAU,EAAE,iBAAO,CAAC;;2BAAA;QA4C5B,sBAAC;IAAD,CA3CA,AA2CC,IAAA;IA3CY,uBAAe,kBA2C3B,CAAA;;;;;;;;;;;;;;IC1CD;QAIE,aACU,eAAgC,EAChC,aAAsB,EACtB,SAAoB;YAFpB,oBAAe,GAAf,eAAe,CAAiB;YAChC,kBAAa,GAAb,aAAa,CAAS;YACtB,cAAS,GAAT,SAAS,CAAW;YALvB,YAAO,GAAG,cAAc,CAAC;QAKC,CAAC;QAE3B,sBAAQ,GAAf;YAAA,iBAUC;YATC,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAU,MAAO,CAAC,yBAAyB,CAAC;YAEjF,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;iBAChC,IAAI,CAAC,UAAA,cAAc;gBAChB,KAAI,CAAC,OAAO,GAAG,2BAAyB,cAAc,CAAC,iBAAiB,CAAC,MAAM,MAAG,CAAC;gBACnF,KAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,gCAAc,EAAE,cAAc,CAAC,CAAC;gBAChE,MAAM,CAAC,cAAc,CAAC;YACxB,CAAC,CACJ,CAAC;QACJ,CAAC;QAEM,6BAAe,GAAtB,UAAuB,MAA2B,EAAE,MAAc;YAChE,MAAM,CAAC,KAAK,GAAG,kBAAkB,CAAC;YAClC,MAAM,CAAC,GAAG,CAAC;gBACT,EAAC,KAAK,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,kCAAkC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE;gBAChH,EAAC,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,+BAA+B,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE;gBAC7G,EAAC,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,qBAAqB,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;gBAC9G,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE;aACxF,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QAhCH;YAAC,0BAAM,CAAC,kCAAe,EAAE,iBAAO,EAAE,6BAAS,CAAC;;eAAA;QAiC5C,UAAC;IAAD,CAhCA,AAgCC,IAAA;IAhCY,WAAG,MAgCf,CAAA;;;;;ICvCD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICEK,OAAQ,CAAC,MAAM,CAAC;QACrB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICvBD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;;;;;;;;;;;;ICCD;QAKI,eAAoB,cAA8B;YAA9B,mBAAc,GAAd,cAAc,CAAgB;QAAI,CAAC;QAEhD,wBAAQ,GAAf,UAAgB,MAAM;YAAtB,iBAQC;YAPG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAElC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC;iBAC3D,IAAI,CAAC,UAAA,OAAO;gBACT,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YAC3B,CAAC,CAAC,CAAC;QACX,CAAC;QAhBL;YAAC,0BAAM,CAAC,gCAAc,CAAC;;iBAAA;QAiBvB,YAAC;IAAD,CAhBA,AAgBC,IAAA;IAhBY,aAAK,QAgBjB,CAAA;;;;;;;;;;;;;;ICdD;QAII,gCAAoB,cAA8B,EAAU,MAAc,EAAU,OAAgB;YAJxG,iBAaC;YATuB,mBAAc,GAAd,cAAc,CAAgB;YAAU,WAAM,GAAN,MAAM,CAAQ;YAAU,YAAO,GAAP,OAAO,CAAS;YAI7F,WAAM,GAAG;gBAEZ,KAAI,CAAC,OAAO,CAAC,eAAe,GAAG,KAAI,CAAC,KAAK,CAAC;gBAC1C,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC5E,CAAC,CAAA;YAPG,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,iBAAiB,CAAC;QACnD,CAAC;QAPL;YAAC,0BAAM,CAAC,gCAAc,EAAE,uBAAM,EAAE,iBAAO,CAAC;;kCAAA;QAcxC,6BAAC;IAAD,CAbA,AAaC,IAAA;IAbY,8BAAsB,yBAalC,CAAA;;;;;;;;;;;;;;ICbD;QAOI,6BAAoB,cAA8B,EAAU,OAAgB,EAAU,MAAc;YAAhF,mBAAc,GAAd,cAAc,CAAgB;YAAU,YAAO,GAAP,OAAO,CAAS;YAAU,WAAM,GAAN,MAAM,CAAQ;YAJ7F,YAAO,GAAW,aAAa,CAAC;YAChC,gBAAW,GAAa,EAAE,CAAC;QAGsE,CAAC;QAElG,sCAAQ,GAAf,UAAgB,MAAM;YAClB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAChF,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;gBAC5B,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;qBAC1B,IAAI,CAAC,UAAA,WAAW;oBACb,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;gBACnC,CAAC,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;YACvC,CAAC;QACL,CAAC;QAEM,oCAAM,GAAb;YAAA,iBAaC;YAZG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAElB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;gBAC9E,MAAM,CAAC;YACX,CAAC;YAGD,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC;iBACtE,IAAI,CAAC,UAAA,YAAY;gBACd,KAAI,CAAC,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;gBACzC,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAI,CAAC,iBAAiB,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;YACxG,CAAC,CAAC,CAAC;QACX,CAAC;QAvCL;YAAC,0BAAM,CAAC,gCAAc,EAAE,iBAAO,EAAE,uBAAM,CAAC;;+BAAA;QAwCxC,0BAAC;IAAD,CAvCA,AAuCC,IAAA;IAvCY,2BAAmB,sBAuC/B,CAAA;;;AC9CD;AACA;AACA;AACA;;;ICHA;QAAA;QAAwC,CAAC;QAAD,gCAAC;IAAD,CAAxC,AAAyC,IAAA;IAA5B,iCAAyB,4BAAG,CAAA;;;;;ICAzC;QAAA;QAAqC,CAAC;QAAD,6BAAC;IAAD,CAArC,AAAsC,IAAA;IAAzB,8BAAsB,yBAAG,CAAA;;;;;ICMtC,QAAQ,CAAC,SAAS,EAAE;QAClB,EAAE,CAAC,YAAY,EAAE;YAEf,IAAI,QAAQ,GAAG,IAAI,iCAAU,EAAE,CAAC;YAChC,QAAQ,CAAC,KAAK,GAAG,UAAA,GAAG,IAAI,OAAA,OAAO,CAAC,OAAO,CAAC;gBACtC,IAAI,EAAE,cAAM,OAAA,EAAE,EAAF,CAAE;aACf,CAAC,EAFsB,CAEtB,CAAC;YAEH,IAAI,aAAa,GAAG,IAAI,iBAAO,EAAE,CAAC;YAClC,IAAI,SAAS,GAAG,IAAI,6BAAS,EAAE,CAAC;YAChC,IAAI,eAAe,GAAG,IAAI,kCAAe,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;YACnE,MAAM,CAAC,IAAI,SAAG,CAAC,eAAe,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,cAAc,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;;;;;ICpBH,gCAAU,EAAE,CAAC;;;;;ICEb,QAAQ,CAAC,wBAAwB,EAAE;QACjC,EAAE,CAAC,2CAA2C,EAAE;YAC9C,IAAI,aAAa,GAAG,IAAI,iBAAO,EAAE,CAAC;YAClC,IAAI,eAAe,GAAG,IAAI,kCAAe,CAAC,IAAI,iCAAU,EAAE,EAAE,aAAa,CAAC,CAAC;YAC3E,IAAI,GAAG,GAAG,eAAe,CAAC,KAAK,EAAE,CAAC;YAClC,MAAM,CAAC,GAAG,YAAY,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,sBAAsB,EAAE,CAAC,UAAC,IAAI;YAC/B,IAAI,aAAa,GAAG,IAAI,iBAAO,EAAE,CAAC;YAClC,IAAI,UAAU,GAAG,IAAI,iCAAU,EAAE,CAAC;YAClC,UAAU,CAAC,OAAO,GAAG,wBAAwB,CAAC;YAC9C,IAAI,eAAe,GAAG,IAAI,kCAAe,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;YACrE,eAAe,CAAC,KAAK,EAAE;iBACpB,IAAI,CAAC,UAAA,cAAc;gBAClB,MAAM,CAAC,cAAc,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxD,IAAI,EAAE,CAAC;YACT,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,MAAM;gBACX,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACzB,KAAK,CAAC,mBAAiB,MAAQ,CAAC,CAAC;gBACjC,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC;QACJ,EAAE,CAAC,cAAc,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;;;;;;;;;;;;;;ICxBH;QAKI,oBAAoB,cAA8B;YAA9B,mBAAc,GAAd,cAAc,CAAgB;QAAG,CAAC;QAE/C,6BAAQ,GAAf,UAAgB,MAAM;YAClB,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3E,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE;iBACjC,IAAI,CAAC,UAAA,YAAY;gBACd,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;gBACjC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,UAAA,OAAO;oBAC7C,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO,IAAK,CAAC,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACX,CAAC;QAnBL;YAAC,0BAAM,CAAC,gCAAc,CAAC;;sBAAA;QAoBvB,iBAAC;IAAD,CAnBA,AAmBC,IAAA;IAnBY,kBAAU,aAmBtB,CAAA;;;ACzBD;ACAA;ACAA;ACAA,EDCI,SAAA;AEDJ,EFEI,aAAA;AGFJ,EHGI,AEFA,sBFEA,YEFA;AEDJ,EFEI,aAAA;AGFJ,EDCI,kCAAA;AFIJ,AILA,EFEI,ACDA,aDCA,qBCDA;AEDJ,ELMI,AGJA,ACDA,SJKA,IGJA,qBCDA;AFIJ,AILA,ENOI,AILA,aJKA,AILA;ADGJ,EHGI,AEFA,AILA,SJKA,iBFEA,QMPA;AFIJ,EFEI,AILA,AHIA,SAAA,IDCA,AILA;EJMA,ACDA,ACDA,SAAA,IDCA,aDCA;AIHJ,EHGI,ACDA,aAAA,aDCA;EGFA,AFEA,SEFA,iBFEA;EEDA,aAAA;EACA,0BAAA","file":"app-bundle.js","sourcesContent":["import { Pak } from './pak';\r\n\r\nexport class View {\r\n    public static fromJSON(json: ViewJSON): View {\r\n        let view = new View();\r\n        view.locked = json.locked;\r\n        view.uniqueId = json.uniqueId;\r\n        view.pane = json.pane;\r\n        view.moduleUrl = json.moduleUrl;\r\n        return view;\r\n    }\r\n\r\n    public locked: boolean;\r\n    public uniqueId: string;\r\n    public pane: PaneType;\r\n    public moduleUrl: string;\r\n    public pak: Pak;\r\n}\r\n\r\nexport type PaneType = 'nav' | 'main' | 'alt';\r\n\r\nexport interface ViewJSON {\r\n    locked: boolean;\r\n    uniqueId: string;\r\n    pane: PaneType;\r\n    moduleUrl: string;\r\n}\r\n","import { View, ViewJSON } from './view';\r\nimport { PakRepository } from './pak-repository';\r\n\r\nexport class Pak {\r\n    public static fromJSON(json: PakJSON): Pak {\r\n        let pak = new Pak();\r\n        // assign properties...\r\n        pak.locked = json.locked;\r\n        pak.uniqueId = json.uniqueId;\r\n        pak.views = json.views.map(viewJson => {\r\n            let view = View.fromJSON(viewJson);\r\n            view.pak = pak;\r\n            return view;\r\n        });\r\n        return pak;\r\n    }\r\n\r\n    public locked: boolean;\r\n    public uniqueId: string;\r\n    public pakRepository: PakRepository;\r\n    public views: View[];\r\n}\r\n\r\nexport interface PakJSON {\r\n    locked: boolean;\r\n    uniqueId: string;\r\n    views: ViewJSON[];\r\n}\r\n",null,"import { HttpClient } from 'aurelia-fetch-client';\r\nimport { PakRepository, PakRepositoryType } from './pak-repository';\r\nimport { Pak } from './pak';\r\nimport { PakDirectory } from './pak-directory';\r\n\r\nexport class PakRepositoryFile implements PakRepository {\r\n    public locked = false;\r\n    public uniqueId = 'state-provider';\r\n    public pakRepositoryType: PakRepositoryType = 'File';\r\n    public pakDirectory: PakDirectory;\r\n    public path: string;\r\n    public pakList: string[];\r\n\r\n    constructor(private httpClient: HttpClient) {}\r\n\r\n    public getPak = (pakId): Promise<Pak> => {\r\n        let that = this;\r\n        return new Promise<Pak>((resolve, reject) => {\r\n            that.httpClient.fetch(`${that.path}/${that.uniqueId}/${pakId}.json`)\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    let pak = Pak.fromJSON(data);\r\n                    pak.pakRepository = that;\r\n                    resolve(pak);\r\n                })\r\n                .catch(reason => {\r\n                    reject(new Error(`fetch session list: reason: \\r\\n\\r\\n${reason}`));\r\n                });\r\n        });\r\n    }\r\n    public getPakList = (): Promise<string[]> => {\r\n        let that = this;\r\n\r\n        return new Promise<string[]>((resolve, reject) => {\r\n            that.httpClient.fetch(`${that.path}/${that.uniqueId}/pak-list.json`)\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    that.pakList = data.pakList;\r\n                    resolve(<string[]> data.pakList);\r\n                })\r\n                .catch(reason => {\r\n                    reject(new Error(`fetch pak list failed: reason: \\r\\n\\r\\n${reason}`));\r\n                });\r\n        });\r\n    }\r\n}\r\n","import { HttpClient } from 'aurelia-fetch-client';\r\nimport { PakRepository, PakRepositoryJSON } from './pak-repository';\r\nimport { PakRepositoryFile } from './pak-repository-file';\r\nimport { StateRepository } from '../state/state-repository';\r\n\r\nexport class PakDirectory {\r\n    public static fromJSON(json: PakDirectoryJSON): PakDirectory {\r\n        let pakDirectory = new PakDirectory();\r\n        // assign properties...\r\n        pakDirectory.locked = json.locked;\r\n        pakDirectory.uniqueId = json.uniqueId;\r\n        pakDirectory.pakRepositories = json.pakRepositories.map(pakRepositoryJSON => {\r\n            switch (pakRepositoryJSON.pakRepositoryType) {\r\n                case 'File':\r\n                    {\r\n                        let pakRepository = new PakRepositoryFile(new HttpClient());\r\n                        pakRepository.locked = pakRepositoryJSON.locked;\r\n                        pakRepository.uniqueId = pakRepositoryJSON.uniqueId;\r\n                        pakRepository.pakRepositoryType = pakRepositoryJSON.pakRepositoryType;\r\n                        pakRepository.path = pakRepositoryJSON.path;\r\n                        pakRepository.pakDirectory = pakDirectory;\r\n                        return pakRepository;\r\n                    }\r\n\r\n                default:\r\n                    throw new Error(`repository ${pakRepositoryJSON.pakRepositoryType} not supported.`);\r\n            }\r\n        });\r\n        return pakDirectory;\r\n    }\r\n\r\n    public locked: boolean;\r\n    public uniqueId: string;\r\n    public pakRepositories: PakRepository[];\r\n    public stateRepository: StateRepository;\r\n\r\n    public toJSON(): PakDirectoryJSON {\r\n        return JSON.parse(JSON.stringify(this));\r\n    }\r\n}\r\n\r\n// A representation of User's data that can be converted to\r\n// and from JSON without being altered.\r\ninterface PakDirectoryJSON {\r\n    locked: boolean;\r\n    uniqueId: string;\r\n    pakRepositories: PakRepositoryJSON[];\r\n}\r\n","import { ActivePak } from './active-pak';\r\n\r\nexport class ViewInstance {\r\n    public static fromJSON(json: ViewInstanceJSON): ViewInstance {\r\n        let viewInstance = new ViewInstance();\r\n        viewInstance.viewState = json.viewState;\r\n        return viewInstance;\r\n    }\r\n\r\n    public viewState: string;\r\n    public activePak: ActivePak;\r\n}\r\n\r\nexport interface ViewInstanceJSON {\r\n    viewState: string;\r\n}\r\n","import { ViewInstance, ViewInstanceJSON } from './view-instance';\r\nimport { StateSession } from './state-session';\r\n\r\nexport class ActivePak {\r\n    public static fromJSON(json: ActivePakJSON): ActivePak {\r\n        let activePak = new ActivePak();\r\n        activePak.locked = json.locked;\r\n        activePak.uniqueId = json.uniqueId;\r\n        activePak.viewInstances = json.viewInstances.map(viewInstanceJson => {\r\n            let viewInstance = ViewInstance.fromJSON(viewInstanceJson);\r\n            viewInstance.activePak = activePak;\r\n            return viewInstance;\r\n        });\r\n\r\n        return activePak;\r\n    }\r\n\r\n    public locked: boolean;\r\n    public uniqueId: string;\r\n    public viewInstances: ViewInstance[];\r\n    public stateSession: StateSession;\r\n}\r\n\r\nexport interface ActivePakJSON {\r\n    locked: boolean;\r\n    uniqueId: string;\r\n    viewInstances: ViewInstanceJSON[];\r\n}\r\n","import { ActivePak, ActivePakJSON } from './active-pak';\r\nimport { StateRepository } from './state-repository';\r\n\r\nexport class StateSession {\r\n\r\n    public static fromJSON(json: StateSessionJSON): StateSession {\r\n        let stateSession = new StateSession();\r\n        // assign properties...\r\n        stateSession.locked = json.locked;\r\n        stateSession.uniqueId = json.uniqueId;\r\n        stateSession.activePaks = json.activePaks.map(activePakJson => {\r\n            let activePak = ActivePak.fromJSON(activePakJson);\r\n            activePak.stateSession = stateSession;\r\n            return activePak;\r\n        });\r\n        return stateSession;\r\n    }\r\n\r\n    public locked: boolean;\r\n    public uniqueId: string;\r\n    public activePaks: ActivePak[] = [];\r\n    public stateRepository: StateRepository;\r\n}\r\n\r\nexport interface StateSessionJSON {\r\n    locked: boolean;\r\n    uniqueId: string;\r\n    activePaks: ActivePakJSON[];\r\n}\r\n",null,null,"import { inject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { StateRepository, StateRepositoryType, StateRepositoryJSON } from './state-repository';\r\nimport { PakDirectory } from '../pak/pak-directory';\r\nimport { StateSession } from './state-session';\r\nimport { StateDirectory } from './state-directory';\r\n\r\n@inject(HttpClient)\r\nexport class StateRepositoryFile implements StateRepository {\r\n    public static fromJSON(json: StateRepositoryJSON): StateRepositoryFile {\r\n        let stateRepository = new StateRepositoryFile(new HttpClient());\r\n        // assign properties...\r\n        stateRepository.locked = json.locked;\r\n        stateRepository.uniqueId = json.uniqueId;\r\n        stateRepository.stateRepositoryType = json.stateRepositoryType;\r\n        stateRepository.path = json.path;\r\n        return stateRepository;\r\n    }\r\n\r\n    public locked = false;\r\n    public uniqueId = 'state-repository';\r\n    public stateRepositoryType: StateRepositoryType = 'File';\r\n    public stateDirectory: StateDirectory;\r\n    public path: string;\r\n\r\n    constructor(private httpClient: HttpClient) {}\r\n\r\n    public getPakDirectory = () => {\r\n        let that = this;\r\n        return new Promise<PakDirectory>((resolve, reject) => {\r\n            that.httpClient.fetch(`${that.path}/${that.uniqueId}/pak-directory.json`)\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    let pakDirectory = PakDirectory.fromJSON(data);\r\n                    pakDirectory.stateRepository = that;\r\n                    resolve(pakDirectory);\r\n                })\r\n                .catch(reason => {\r\n                    reject(new Error(`fetch pak-directory failed: reason: \\r\\n\\r\\n${reason}`));\r\n                });\r\n        });\r\n    }\r\n    public getStateSession(sessionId) {\r\n        let that = this;\r\n        return new Promise<StateSession>((resolve, reject) => {\r\n            that.httpClient.fetch(`${that.path}/${that.uniqueId}/${sessionId}.json`)\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    let stateSession = StateSession.fromJSON(data);\r\n                    stateSession.stateRepository = that;\r\n                    resolve(stateSession);\r\n                })\r\n                .catch(reason => {\r\n                    reject(new Error(`fetch session list: reason: \\r\\n\\r\\n${reason}`));\r\n                });\r\n        });\r\n    }\r\n    public getSessionList() {\r\n        let that = this;\r\n\r\n        return new Promise<string[]>((resolve, reject) => {\r\n            that.httpClient.fetch(`${that.path}/${that.uniqueId}/session-list.json`)\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    resolve(<string[]> data.sessionList);\r\n                })\r\n                .catch(reason => {\r\n                    reject(new Error(`fetch session list: reason: \\r\\n\\r\\n${reason}`));\r\n                });\r\n        });\r\n    }\r\n    public toJSON(): StateRepositoryJSON {\r\n        return {\r\n            locked: this.locked,\r\n            stateRepositoryType: this.stateRepositoryType,\r\n            uniqueId: this.uniqueId,\r\n            path: this.path,\r\n        };\r\n    }\r\n}\r\n\r\nexport interface StateRepositoryFileJSON {\r\n    locked: boolean;\r\n    uniqueId: string;\r\n    stateRepositoryType: StateRepositoryType;\r\n}\r\n\r\n// \r\n","import { HttpClient } from 'aurelia-fetch-client';\r\nimport { StateRepository, StateRepositoryJSON  } from './state-repository';\r\nimport { StateRepositoryFile } from './state-repository-file';\r\n\r\nexport class StateDirectory {\r\n    public static fromJSON(json: StateDirectoryJSON): StateDirectory {\r\n        let stateDirectory = new StateDirectory();\r\n        // assign properties...\r\n        stateDirectory.locked = json.locked;\r\n        stateDirectory.uniqueId = json.uniqueId;\r\n        stateDirectory.stateRepositories = json.stateRepositories.map(stateRepositoryJSON => {\r\n            switch (stateRepositoryJSON.stateRepositoryType) {\r\n                case 'File':\r\n                {\r\n                    let stateRepository = new StateRepositoryFile(new HttpClient());\r\n                    stateRepository.locked = stateRepositoryJSON.locked;\r\n                    stateRepository.uniqueId = stateRepositoryJSON.uniqueId;\r\n                    stateRepository.stateRepositoryType = stateRepositoryJSON.stateRepositoryType;\r\n                    stateRepository.path = stateRepositoryJSON.path;\r\n                    stateRepository.stateDirectory = stateDirectory;\r\n                    return stateRepository;\r\n                }\r\n\r\n                default:\r\n                    throw new Error(`repository ${stateRepositoryJSON.stateRepositoryType} not supported.`);\r\n            }\r\n        });\r\n        return stateDirectory;\r\n    }\r\n\r\n    public locked: boolean;\r\n    public uniqueId: string;\r\n    public stateRepositories: StateRepository[];\r\n\r\n    public getStateRepository(uniqueId: string): StateRepository {\r\n\r\n        // let the default plotter host (aka state repository) be the first one in the list\r\n        if (!uniqueId && this.stateRepositories.length > 0) {\r\n            return this.stateRepositories[0];\r\n        }\r\n\r\n        let repoMatch = null;\r\n        this.stateRepositories.some(repo => {\r\n            if (repo.uniqueId === uniqueId) {\r\n                repoMatch = repo;\r\n                return true; // stops processing, so we choose the first repo having that unique id\r\n            }\r\n            return false;\r\n        });\r\n        return repoMatch;\r\n    }\r\n\r\n    public getStateSession(stateRepositoryId: string, stateSessionId: string) {\r\n        let repo = this.getStateRepository(stateRepositoryId);\r\n        if (!repo) {\r\n            throw new Error(`Could not retrieve repository: ${stateRepositoryId}`);\r\n        }\r\n\r\n        return repo.getStateSession(stateSessionId);\r\n    }\r\n\r\n    public toJSON(): StateDirectoryJSON {\r\n        return {\r\n            locked: this.locked,\r\n            stateRepositories: this.stateRepositories.map(stateRepository => stateRepository.toJSON()),\r\n            uniqueId: this.uniqueId,\r\n        };\r\n    }\r\n}\r\n\r\nexport interface StateDirectoryJSON {\r\n    locked: boolean;\r\n    uniqueId: string;\r\n    stateRepositories: StateRepositoryJSON[];\r\n}\r\n",null,null,"import { inject, Container } from 'aurelia-framework';\nimport { Router, RouterConfiguration } from 'aurelia-router';\nimport { PlatformStartup } from './platform/platform-startup';\nimport { Plotter } from './platform/plotter';\nimport { StateDirectory } from './platform/state/state-directory';\n\n@inject(PlatformStartup, Plotter, Container)\nexport class App {\n  public router: Router;\n  public message = 'Hello World!';\n\n  constructor(\n    private platformStartup: PlatformStartup,\n    private plotterConfig: Plotter,\n    private container: Container) {}\n\n  public activate() {\n    this.plotterConfig.stateDirectoryName = (<any> window).plotterStateDirectoryName;\n\n    return this.platformStartup.start()\n      .then(stateDirectory => {\n          this.message = `Hello World! (started:${stateDirectory.stateRepositories.length})`;\n          this.container.registerInstance(StateDirectory, stateDirectory);\n          return stateDirectory;\n        }\n    );\n  }\n\n  public configureRouter(config: RouterConfiguration, router: Router) {\n    config.title = 'Plotter-Platfrom';\n    config.map([\n      {route: ['', 'state'], name: 'state', moduleId: './state/state-repository-chooser', nav: false, title: 'State' },\n      {route: 'session', name: 'session', moduleId: './state/state-session-chooser', nav: false, title: 'Session' },\n      {route: 'new-session', name: 'newSession', moduleId: './state/new-session', nav: false, title: 'New Session' },\n      {route: 'shell', name: 'shell', moduleId: './shell/shell', nav: false, title: 'Shell' },\n    ]);\n\n    this.router = router;\n  }\n}\n",null,null,null,null,null,"import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { StateDirectory } from '../platform/state/state-directory';\r\nimport { StateRepository } from '../platform/state/state-repository';\r\nimport { Plotter } from '../platform/plotter';\r\n\r\n@inject(StateDirectory, Plotter, Router)\r\nexport class StateSessionChooser {\r\n    public stateRepoUniqueId: string;\r\n    public stateRepo: StateRepository;\r\n    public message: string = 'no message.';\r\n    public sessionList: string[] = [];\r\n    public sessionId: string;\r\n\r\n    constructor(private stateDirectory: StateDirectory, private plotter: Plotter, private router: Router) { }\r\n\r\n    public activate(params) {\r\n        let that = this;\r\n\r\n        this.stateRepoUniqueId = params.hostId;\r\n        this.stateRepo = this.stateDirectory.getStateRepository(this.stateRepoUniqueId);\r\n        if (this.stateRepo) {\r\n            this.message = 'found repo';\r\n            this.stateRepo.getSessionList()\r\n                .then(sessionList => {\r\n                    that.sessionList = sessionList;\r\n                });\r\n        } else {\r\n            this.message = 'did not find repo';\r\n        }\r\n    }\r\n\r\n    public choose() {\r\n        if (!this.sessionId) {\r\n            // route to new-session\r\n            this.router.navigateToRoute('newSession', { hostId: this.stateRepoUniqueId });\r\n            return;\r\n        }\r\n\r\n        // route to shell\r\n        this.stateDirectory.getStateSession(this.stateRepoUniqueId, this.sessionId)\r\n            .then(stateSession => {\r\n                this.plotter.stateSession = stateSession;\r\n                this.router.navigateToRoute('shell', { hostId: this.stateRepoUniqueId, sessionId: this.sessionId });\r\n            });\r\n    }\r\n}\r\n",null,null,null,null,null,null,"import { inject } from 'aurelia-framework';\r\nimport { StateDirectory } from '../platform/state/state-directory';\r\nimport { StateRepository } from '../platform/state/state-repository';\r\nimport { PakDirectory } from '../platform/pak/pak-directory';\r\n\r\n@inject(StateDirectory)\r\nexport class NewSession {\r\n    public hostId: string;\r\n    public stateRepository: StateRepository;\r\n    public pakDirectory: PakDirectory;\r\n\r\n    constructor(private stateDirectory: StateDirectory) {}\r\n\r\n    public activate(params) {\r\n        let that = this;\r\n        this.hostId = params.hostId;\r\n        this.stateRepository = this.stateDirectory.getStateRepository(this.hostId);\r\n        this.stateRepository.getPakDirectory()\r\n            .then(pakDirectory => {\r\n                that.pakDirectory = pakDirectory;\r\n                that.pakDirectory.pakRepositories.forEach(pakRepo => {\r\n                    pakRepo.getPakList().then(pakList => {});\r\n                });\r\n            });\r\n    }\r\n}\r\n",null,null,"router-view {\r\n    flex: 1 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n",null,".header {\r\n    background-color: mediumaquamarine;\r\n    padding: 10px;\r\n}\r\n\r\n.body {\r\n    flex: 1 1;\r\n    padding: 10px;\r\n    background-color: darkcyan;\r\n}\r\n",null,".header {\r\n    background-color: mediumaquamarine;\r\n    padding: 10px;\r\n}\r\n\r\n.body {\r\n    flex: 1 1;\r\n    padding: 10px;\r\n    background-color: darkcyan;\r\n}\r\n",".header {\r\n    background-color: mediumaquamarine;\r\n    padding: 10px;\r\n}\r\n\r\n.body {\r\n    flex: 1 1;\r\n    padding: 10px;\r\n    background-color: darkcyan;\r\n}\r\n",".header {\r\n    background-color: mediumaquamarine;\r\n    padding: 10px;\r\n}\r\n\r\n.body {\r\n    flex: 1 1;\r\n    padding: 10px;\r\n    background-color: darkcyan;\r\n}\r\n",null,".header {\r\n    background-color: mediumaquamarine;\r\n    padding: 10px;\r\n}\r\n\r\n.body {\r\n    flex: 1 1;\r\n    padding: 10px;\r\n    background-color: darkcyan;\r\n}\r\n"],"sourceRoot":"..\\src"}